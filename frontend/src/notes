// CSS IMPORTS
import './App.css';
import "bootstrap/dist/css/bootstrap.css";
// NAVBAR IMPORTS
import { BrowserRouter as Router, Switch, Route } from "react-router-dom";
import Nav from "./Nav";
// REDUX IMPORTS
import {createStore} from 'redux'
import rootReducer from './reducers'
import {Provider} from 'react-redux'
import {useSelector, useDispatch} from 'react-redux' // this lets you output the value of a state
// IMPORT {actions} from './actions'


function App() {

  const store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())
  const dispatch = useDispatch()
  //for example
  // const counter = useSelector(state => state.counter
  return (
    <Provider store={store}>
      // <h3> Counter {counter} </h3>
      <div className="App">
      <button onClick={() => dispatch(increment)}> </button>

      </div>
    </Provider>
  );
}

export default App;













import React, { Component } from "react";
import {connect} from 'react-redux';
import {fetchFoods, foodRating} from '../actions/menuAction'
import {postOrder} from '../actions/orderAction'
import {Modal, Card, Form} from 'react-bootstrap'
import 'bootstrap/dist/css/bootstrap.min.css'
import StarRatings from 'react-star-ratings';
import MenuModal from "./MenuModal"

class Menu extends Component {
  componentDidMount(){
    this.props.fetchFoods()
  }

  state = {
    rating: "",
    toggleModal: false,
    selectedItem: {}
  }



  handleOrder = (e, food) => {
    e.preventDefault()
    this.props.postOrder(food, this.props.userId)
  }

  handleRating = (e, food) => {
    //e.prevent default
    this.setState({
      rating: e
    })
    this.props.foodRating(e, food, this.props.userId)
  }

  // handleChange = (e) => {
  //   this.setState({
  //     rating: e
  //   })
  // }

  handleOpenModal = (e, food) => {
    this.setState({
      toggleModal: true,
      selectedItem: food
    })
  }

  handleCloseModal = () => {
    this.setState({
      toggleModal: false
    })
  }

  foodItems = () => {
    return this.props.foods.map(food => (
    <div>
    <Card className="menu_card" onClick={(e) => this.handleOpenModal(e, food)} key={food.id}>
    <h4 className="bold-white">{food.name} Roll</h4>
    <h5 className="bold-white">${food.price}</h5>
    </Card>
    </div>
  ))}

  render() {


    return (
      <div>
        <h3 className='bold-white'> Menu </h3>
        {this.foodItems()}
        {this.state.handleOpenModal ? <MenuModal allFoods={this.props.foods}handleOpenModal={this.state.toggleModal} handleCloseModal={this.handleCloseModal} selectedFood={this.state.selectedFood}/> : null}
        <br/>
        <button onClick = {this.handleOrder}>Checkout</button>
      </div>

    );
  }
}

const mapStateToProps = (state) => ({
  foods: state.foods.items,
  order: state.orderReducer.foodInOrder,
  rating: state.foods.rating,
  user: state.userReducer.user
})

export default connect(mapStateToProps, {fetchFoods, postOrder, foodRating})(Menu);
